import requests
import json
import time
from datetime import datetime

# 将从 manifest 中获取到的 API 密钥放在这里
API_KEYS = {
    "baidu_lbs": "UEnH61ElxrwvKKBOA6oTgio7",
    "coloros_camera": "ATBEAiBlu2AMxWd3cbaDkGXBlGP9ojLOanK26swRCrx8kOhedQIgMrU1ySPRc8VudROsZzGCX+9FdGHFzKsxNK7wTXs7EQ5xU+ypfAAAAA==",
    "coloros_olk": "ATBGAiEA13a94ZZ+9ScjSIFyINJKOZzMH+dxxYwvFEsXG6/C1EYCIQDsk3VJQw1yuumBy8MmpVDIij7kqiQK3KEKU5DUE+BaGm3GSt38AAAA",
    "coloros_hyper": "ATBEAiBJNHhwZ0FWIadgsHfFx1oB0BXsLZ9mxrmQc4L/hbAgWwIgPWNKxfYUT/5mFlXVTnn4RAEzHqaPX6Y1fTS1PeG4fQdokG/xYAAAAA==",
    "oplus_card": "ADBFAiEA7tcO65jxF48sKrZjVHgP1bNOxAvgTvpUt2wdpw33o5ACIEbYd9Jb/3VxPPTRDipl3uXbNpjmi0ysYP59kCcgA0J/bwme5Q==;ADBGAiEA3DQoBUXLi7Jgj9EkSzrDVZis1ipVO9hmPha0hPmnqOkCIQDRM07z+/ef/fk9ZC2X0d9NdN9YRiGfTrNBS5PunUUsqm8Jns0=",
    "vivo_push": "a71e4cd2-3308-4f30-8cde-652d6ec3d7ce",
    "amap_api": "d23a42abfdc38341aae4ad05e14a6aaa",
    "tencent_map": "OLABZ-KGH35-CXVIJ-QSCSU-M5P6T-QJFSI",
}

# 替换为实际的 API URL
API_ENDPOINTS = {
    "baidu_lbs": "https://api.map.baidu.com/location/v2",  # 示例 URL，替换为实际 URL
    "coloros_camera": "https://api.coloros.com/camera/v1",  # 替换为实际 URL
    "coloros_olk": "https://api.coloros.com/olk/v1",  # 替换为实际 URL
    "coloros_hyper": "https://api.coloros.com/hyper/v1",  # 替换为实际 URL
    "oplus_card": "https://api.oplus.com/card/v1",  # 替换为实际 URL
    "vivo_push": "https://push.vivo.com/api/v1/notify",  # 替换为实际 URL
    "amap_api": "https://restapi.amap.com/v3/place",  # 替换为实际 URL
    "tencent_map": "https://apis.map.qq.com/v2/geocoder",  # 替换为实际 URL
}


def test_api_vulnerabilities(api_name, api_key, endpoint):
    print("\n" + "=" * 80)  # 漂亮的分隔线
    print(f"🎯 接口名称: {api_name}")
    print(f"🔗 接口地址: {endpoint}")
    print(f"🔑 API密钥: {api_key}")

    start_time = time.time()

    try:
        # 发送请求并记录时间
        response = requests.get(endpoint, params={"key": api_key})
        elapsed_time = time.time() - start_time

        # 判断响应类型
        content_type = response.headers.get("content-type", "")
        if "application/json" in content_type:
            data_type = "JSON"
            try:
                content = json.dumps(response.json(), indent=2, ensure_ascii=False)
            except:
                content = response.text
        elif "text/html" in content_type:
            data_type = "HTML"
            content = response.text
        else:
            data_type = content_type.split(";")[0]
            content = response.text

        # 获取响应头信息
        headers = "\n".join([f"{k}: {v}" for k, v in response.headers.items()])

        # 输出请求信息
        status_color = "🟢" if response.status_code < 400 else "🔴"
        print(f"\n{status_color} 状态信息:")
        print(f"├── 请求方法: GET")
        print(f"├── 状态代码: {response.status_code}")
        print(f"├── 响应类型: {data_type}")
        print(f"├── 响应大小: {len(response.content)} 字节")
        print(f"└── 响应时间: {elapsed_time:.2f} 秒")

        # 如果是GET请求，提供可点击的URL
        if "key" in response.url:
            safe_url = response.url.split("key=")[0] + "key=***"
            print(f"\n🔍 测试链接 (已隐藏密钥):")
            print(f"└── {safe_url}")
        else:
            print(f"\n🔍 完整请求地址:")
            print(f"└── {response.url}")

        print("\n📋 响应头信息:")
        print("-" * 40)
        print(headers)

        print("\n📄 响应内容:")
        print("-" * 40)
        print(content)
        print("-" * 40)

    except requests.exceptions.RequestException as e:
        print(f"\n❌ 错误信息: {str(e)}")
        print("-" * 40)


def main():
    # 遍历每个 API，并测试其漏洞
    for api_name, api_key in API_KEYS.items():
        endpoint = API_ENDPOINTS.get(api_name)
        if endpoint:
            test_api_vulnerabilities(api_name, api_key, endpoint)


if __name__ == "__main__":
    main()
